"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/number-flow";
exports.ids = ["vendor-chunks/number-flow"];
exports.modules = {

/***/ "(ssr)/./node_modules/number-flow/dist/continuous-ybARbRnI.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/number-flow/dist/continuous-ybARbRnI.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   D: () => (/* binding */ L),\n/* harmony export */   N: () => (/* binding */ G),\n/* harmony export */   a: () => (/* binding */ Y),\n/* harmony export */   c: () => (/* binding */ it),\n/* harmony export */   d: () => (/* binding */ tt),\n/* harmony export */   p: () => (/* binding */ $),\n/* harmony export */   r: () => (/* binding */ et)\n/* harmony export */ });\n/* harmony import */ var esm_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! esm-env */ \"(ssr)/./node_modules/esm-env/index.js\");\n\nconst c = (n, t, e) => {\n  const i = document.createElement(n), [s, a] = Array.isArray(t) ? [void 0, t] : [t, e];\n  return s && Object.assign(i, s), a == null || a.forEach((r) => i.appendChild(r)), i;\n}, V = (n, t) => {\n  var e;\n  return t === \"left\" ? n.offsetLeft : (((e = n.offsetParent instanceof HTMLElement ? n.offsetParent : null) == null ? void 0 : e.offsetWidth) ?? 0) - n.offsetWidth - n.offsetLeft;\n}, W = (n) => n.offsetWidth > 0 && n.offsetHeight > 0, tt = (n, t) => {\n  esm_env__WEBPACK_IMPORTED_MODULE_0__.BROWSER && customElements.get(n) !== t && customElements.define(n, t);\n};\nfunction B(n, t, { reverse: e = !1 } = {}) {\n  const i = n.length;\n  for (let s = e ? i - 1 : 0; e ? s >= 0 : s < i; e ? s-- : s++)\n    t(n[s], s);\n}\nconst D = String.raw, M = String.raw, H = esm_env__WEBPACK_IMPORTED_MODULE_0__.BROWSER && typeof CSS < \"u\" && CSS.supports && CSS.supports(\"animation-timing-function\", \"linear(1,2)\"), X = esm_env__WEBPACK_IMPORTED_MODULE_0__.BROWSER && typeof CSS < \"u\" && CSS.supports && CSS.supports(\"line-height\", \"mod(1,1)\"), $ = esm_env__WEBPACK_IMPORTED_MODULE_0__.BROWSER && typeof matchMedia < \"u\" ? matchMedia(\"(prefers-reduced-motion: reduce)\") : null, _ = \"--_number-flow-d-opacity\", A = \"--_number-flow-d-width\", w = \"--_number-flow-dx\", k = \"--_number-flow-d\", F = (() => {\n  try {\n    return CSS.registerProperty({\n      name: _,\n      syntax: \"<number>\",\n      inherits: !1,\n      initialValue: \"0\"\n    }), CSS.registerProperty({\n      name: w,\n      syntax: \"<length>\",\n      inherits: !0,\n      initialValue: \"0px\"\n    }), CSS.registerProperty({\n      name: A,\n      syntax: \"<number>\",\n      inherits: !1,\n      initialValue: \"0\"\n    }), CSS.registerProperty({\n      name: k,\n      syntax: \"<number>\",\n      inherits: !0,\n      initialValue: \"0\"\n    }), !0;\n  } catch {\n    return !1;\n  }\n})(), R = \"var(--number-flow-char-height, 1em)\", h = \"var(--number-flow-mask-height, 0.25em)\", x = `calc(${h} / 2)`, C = \"var(--number-flow-mask-width, 0.5em)\", d = `calc(${C} / var(--scale-x))`, u = \"#000 0, transparent 71%\", U = M`:host{display:inline-block;direction:ltr;white-space:nowrap;isolation:isolate;line-height:${R} !important}.number,.number__inner{display:inline-block;transform-origin:left top}:host([data-will-change]) :is(.number,.number__inner,.section,.digit,.digit__num,.symbol){will-change:transform}.number{--scale-x:calc(1 + var(${A}) / var(--width));transform:translateX(var(${w})) scaleX(var(--scale-x));margin:0 calc(-1 * ${C});position:relative;-webkit-mask-image:linear-gradient(to right,transparent 0,#000 ${d},#000 calc(100% - ${d}),transparent ),linear-gradient(to bottom,transparent 0,#000 ${h},#000 calc(100% - ${h}),transparent 100% ),radial-gradient(at bottom right,${u}),radial-gradient(at bottom left,${u}),radial-gradient(at top left,${u}),radial-gradient(at top right,${u});-webkit-mask-size:100% calc(100% - ${h} * 2),calc(100% - ${d} * 2) 100%,${d} ${h},${d} ${h},${d} ${h},${d} ${h};-webkit-mask-position:center,center,top left,top right,bottom right,bottom left;-webkit-mask-repeat:no-repeat}.number__inner{padding:${x} ${C};transform:scaleX(calc(1 / var(--scale-x))) translateX(calc(-1 * var(${w})))}:host > :not(.number){z-index:5}.section,.symbol{display:inline-block;position:relative;isolation:isolate}.section::after{content:'\\200b';display:inline-block}.section--justify-left{transform-origin:center left}.section--justify-right{transform-origin:center right}.section > [inert],.symbol > [inert]{margin:0 !important;position:absolute !important;z-index:-1}.digit{display:inline-block;position:relative;--c:var(--current) + var(${k})}.digit__num,.number .section::after{padding:${x} 0}.digit__num{display:inline-block;--offset-raw:mod(var(--length) + var(--n) - mod(var(--c),var(--length)),var(--length));--offset:calc( var(--offset-raw) - var(--length) * round(down,var(--offset-raw) / (var(--length) / 2),1) );--y:clamp(-100%,var(--offset) * 100%,100%);transform:translateY(var(--y))}.digit__num[inert]{position:absolute;top:0;left:50%;transform:translateX(-50%) translateY(var(--y))}.digit:not(.is-spinning) .digit__num[inert]{display:none}.symbol__value{display:inline-block;mix-blend-mode:plus-lighter;white-space:pre}.section--justify-left .symbol > [inert]{left:0}.section--justify-right .symbol > [inert]{right:0}.animate-presence{opacity:calc(1 + var(${_}))}`, O = esm_env__WEBPACK_IMPORTED_MODULE_0__.BROWSER ? HTMLElement : class {\n}, z = M`:host{display:inline-block;direction:ltr;white-space:nowrap;line-height:${R} !important}span{display:inline-block}:host([data-will-change]) span{will-change:transform}.number,.digit{padding:${x} 0}.symbol{white-space:pre}`, I = (n) => `<span class=\"${n.type === \"integer\" || n.type === \"fraction\" ? \"digit\" : \"symbol\"}\" part=\"${n.type === \"integer\" || n.type === \"fraction\" ? `digit ${n.type}-digit` : `symbol ${n.type}`}\">${n.value}</span>`, g = (n, t) => `<span part=\"${t}\">${n.reduce((e, i) => e + I(i), \"\")}</span>`, et = (n) => (\n  // shadowroot=\"open\" non-standard attribute for old Chrome:\n  D`<template shadowroot=\"open\" shadowrootmode=\"open\"\n\t\t\t><style>\n\t\t\t\t${z}</style\n\t\t\t>${g(n.pre, \"left\")}<span part=\"number\" class=\"number\"\n\t\t\t\t>${g(n.integer, \"integer\")}${g(n.fraction, \"fraction\")}</span\n\t\t\t>${g(n.post, \"right\")}</template\n\t\t><span\n\t\t\tstyle=\"font-kerning: none; display: inline-block; line-height: ${R} !important; padding: ${h} 0;\"\n\t\t\t>${n.valueAsString}</span\n\t\t>`\n), Y = X && H && F;\nlet y;\nclass G extends O {\n  constructor() {\n    super(), this.created = !1, this.manual = !1;\n    const { animated: t, ...e } = this.constructor.defaultProps;\n    this._animated = this.computedAnimated = t, Object.assign(this, e);\n  }\n  get animated() {\n    return this._animated;\n  }\n  set animated(t) {\n    var e;\n    this.animated !== t && (this._animated = t, (e = this.shadowRoot) == null || e.getAnimations().forEach((i) => i.finish()));\n  }\n  set data(t) {\n    var o;\n    if (t == null)\n      return;\n    const { pre: e, integer: i, fraction: s, post: a, value: r } = t;\n    if (this.created) {\n      const l = this._data;\n      this._data = t, this.computedTrend = typeof this.trend == \"function\" ? this.trend(l.value, r) : this.trend, this.computedAnimated = Y && this._animated && (!this.respectMotionPreference || !($ != null && $.matches)) && // https://github.com/barvian/number-flow/issues/9\n      W(this), (o = this.plugins) == null || o.forEach((p) => {\n        var f;\n        return (f = p.onUpdate) == null ? void 0 : f.call(p, t, l, this);\n      }), this.manual || this.willUpdate(), this._pre.update(e), this._num.update({ integer: i, fraction: s }), this._post.update(a), this.manual || this.didUpdate();\n    } else {\n      if (this._data = t, this.attachShadow({ mode: \"open\" }), typeof CSSStyleSheet < \"u\" && this.shadowRoot.adoptedStyleSheets)\n        y || (y = new CSSStyleSheet(), y.replaceSync(U)), this.shadowRoot.adoptedStyleSheets = [y];\n      else {\n        const l = document.createElement(\"style\");\n        l.textContent = U, this.shadowRoot.appendChild(l);\n      }\n      this._pre = new T(this, e, {\n        justify: \"right\",\n        part: \"left\"\n      }), this.shadowRoot.appendChild(this._pre.el), this._num = new Z(this, i, s), this.shadowRoot.appendChild(this._num.el), this._post = new T(this, a, {\n        justify: \"left\",\n        part: \"right\"\n      }), this.shadowRoot.appendChild(this._post.el);\n    }\n    this.created = !0;\n  }\n  willUpdate() {\n    this._pre.willUpdate(), this._num.willUpdate(), this._post.willUpdate();\n  }\n  didUpdate() {\n    if (!this.computedAnimated)\n      return;\n    this._abortAnimationsFinish ? this._abortAnimationsFinish.abort() : this.dispatchEvent(new Event(\"animationsstart\")), this._pre.didUpdate(), this._num.didUpdate(), this._post.didUpdate();\n    const t = new AbortController();\n    Promise.all(this.shadowRoot.getAnimations().map((e) => e.finished)).then(() => {\n      t.signal.aborted || (this.dispatchEvent(new Event(\"animationsfinish\")), this._abortAnimationsFinish = void 0);\n    }), this._abortAnimationsFinish = t;\n  }\n}\nG.defaultProps = {\n  transformTiming: {\n    duration: 900,\n    // Make sure to keep this minified:\n    easing: \"linear(0,.005,.019,.039,.066,.096,.129,.165,.202,.24,.278,.316,.354,.39,.426,.461,.494,.526,.557,.586,.614,.64,.665,.689,.711,.731,.751,.769,.786,.802,.817,.831,.844,.856,.867,.877,.887,.896,.904,.912,.919,.925,.931,.937,.942,.947,.951,.955,.959,.962,.965,.968,.971,.973,.976,.978,.98,.981,.983,.984,.986,.987,.988,.989,.99,.991,.992,.992,.993,.994,.994,.995,.995,.996,.996,.9963,.9967,.9969,.9972,.9975,.9977,.9979,.9981,.9982,.9984,.9985,.9987,.9988,.9989,1)\"\n  },\n  spinTiming: void 0,\n  opacityTiming: { duration: 450, easing: \"ease-out\" },\n  animated: !0,\n  trend: (n, t) => Math.sign(t - n),\n  respectMotionPreference: !0,\n  plugins: void 0,\n  digits: void 0\n};\nclass Z {\n  constructor(t, e, i, { className: s, ...a } = {}) {\n    this.flow = t, this._integer = new j(t, e, {\n      justify: \"right\",\n      part: \"integer\"\n    }), this._fraction = new j(t, i, {\n      justify: \"left\",\n      part: \"fraction\"\n    }), this._inner = c(\"span\", {\n      className: \"number__inner\"\n    }, [this._integer.el, this._fraction.el]), this.el = c(\"span\", {\n      ...a,\n      part: \"number\",\n      className: `number ${s ?? \"\"}`\n    }, [this._inner]);\n  }\n  willUpdate() {\n    this._prevWidth = this.el.offsetWidth, this._prevLeft = this.el.getBoundingClientRect().left, this._integer.willUpdate(), this._fraction.willUpdate();\n  }\n  update({ integer: t, fraction: e }) {\n    this._integer.update(t), this._fraction.update(e);\n  }\n  didUpdate() {\n    const t = this.el.getBoundingClientRect();\n    this._integer.didUpdate(), this._fraction.didUpdate();\n    const e = this._prevLeft - t.left, i = this.el.offsetWidth, s = this._prevWidth - i;\n    this.el.style.setProperty(\"--width\", String(i)), this.el.animate({\n      [w]: [`${e}px`, \"0px\"],\n      [A]: [s, 0]\n    }, {\n      ...this.flow.transformTiming,\n      composite: \"accumulate\"\n    });\n  }\n}\nclass P {\n  constructor(t, e, { justify: i, className: s, ...a }, r) {\n    this.flow = t, this.children = /* @__PURE__ */ new Map(), this.onCharRemove = (l) => () => {\n      this.children.delete(l);\n    }, this.justify = i;\n    const o = e.map((l) => this.addChar(l).el);\n    this.el = c(\"span\", {\n      ...a,\n      className: `section section--justify-${i} ${s ?? \"\"}`\n    }, r ? r(o) : o);\n  }\n  addChar(t, { startDigitsAtZero: e = !1, ...i } = {}) {\n    const s = t.type === \"integer\" || t.type === \"fraction\" ? new L(this, t.type, e ? 0 : t.value, t.pos, {\n      ...i,\n      onRemove: this.onCharRemove(t.key)\n    }) : new q(this, t.type, t.value, {\n      ...i,\n      onRemove: this.onCharRemove(t.key)\n    });\n    return this.children.set(t.key, s), s;\n  }\n  unpop(t) {\n    t.el.removeAttribute(\"inert\"), t.el.style.top = \"\", t.el.style[this.justify] = \"\";\n  }\n  pop(t) {\n    t.forEach((e) => {\n      e.el.style.top = `${e.el.offsetTop}px`, e.el.style[this.justify] = `${V(e.el, this.justify)}px`;\n    }), t.forEach((e) => {\n      e.el.setAttribute(\"inert\", \"\"), e.present = !1;\n    });\n  }\n  addNewAndUpdateExisting(t) {\n    const e = /* @__PURE__ */ new Map(), i = /* @__PURE__ */ new Map(), s = this.justify === \"left\", a = s ? \"prepend\" : \"append\";\n    if (B(t, (r) => {\n      let o;\n      this.children.has(r.key) ? (o = this.children.get(r.key), i.set(r, o), this.unpop(o), o.present = !0) : (o = this.addChar(r, { startDigitsAtZero: !0, animateIn: !0 }), e.set(r, o)), this.el[a](o.el);\n    }, { reverse: s }), this.flow.computedAnimated) {\n      const r = this.el.getBoundingClientRect();\n      e.forEach((o) => {\n        o.willUpdate(r);\n      });\n    }\n    e.forEach((r, o) => {\n      r.update(o.value);\n    }), i.forEach((r, o) => {\n      r.update(o.value);\n    });\n  }\n  willUpdate() {\n    const t = this.el.getBoundingClientRect();\n    this._prevOffset = t[this.justify], this.children.forEach((e) => e.willUpdate(t));\n  }\n  didUpdate() {\n    const t = this.el.getBoundingClientRect();\n    this.children.forEach((s) => s.didUpdate(t));\n    const e = t[this.justify], i = this._prevOffset - e;\n    i && this.children.size && this.el.animate({\n      transform: [`translateX(${i}px)`, \"none\"]\n    }, {\n      ...this.flow.transformTiming,\n      composite: \"accumulate\"\n    });\n  }\n}\nclass j extends P {\n  update(t) {\n    const e = /* @__PURE__ */ new Map();\n    this.children.forEach((i, s) => {\n      t.find((a) => a.key === s) || e.set(s, i), this.unpop(i);\n    }), this.addNewAndUpdateExisting(t), e.forEach((i) => {\n      i instanceof L && i.update(0);\n    }), this.pop(e);\n  }\n}\nclass T extends P {\n  update(t) {\n    const e = /* @__PURE__ */ new Map();\n    this.children.forEach((i, s) => {\n      t.find((a) => a.key === s) || e.set(s, i);\n    }), this.pop(e), this.addNewAndUpdateExisting(t);\n  }\n}\nclass E {\n  constructor(t, e, { onRemove: i, animateIn: s = !1 } = {}) {\n    this.flow = t, this.el = e, this._present = !0, this._remove = () => {\n      var a;\n      this.el.remove(), (a = this._onRemove) == null || a.call(this);\n    }, this.el.classList.add(\"animate-presence\"), this.flow.computedAnimated && s && this.el.animate({\n      [_]: [-0.9999, 0]\n    }, {\n      ...this.flow.opacityTiming,\n      composite: \"accumulate\"\n    }), this._onRemove = i;\n  }\n  get present() {\n    return this._present;\n  }\n  set present(t) {\n    if (this._present !== t) {\n      if (this._present = t, t ? this.el.removeAttribute(\"inert\") : this.el.setAttribute(\"inert\", \"\"), !this.flow.computedAnimated) {\n        t || this._remove();\n        return;\n      }\n      this.el.style.setProperty(\"--_number-flow-d-opacity\", t ? \"0\" : \"-.999\"), this.el.animate({\n        [_]: t ? [-0.9999, 0] : [0.999, 0]\n      }, {\n        ...this.flow.opacityTiming,\n        composite: \"accumulate\"\n      }), t ? this.flow.removeEventListener(\"animationsfinish\", this._remove) : this.flow.addEventListener(\"animationsfinish\", this._remove, {\n        once: !0\n      });\n    }\n  }\n}\nclass N extends E {\n  constructor(t, e, i, s) {\n    super(t.flow, i, s), this.section = t, this.value = e, this.el = i;\n  }\n}\nclass L extends N {\n  constructor(t, e, i, s, a) {\n    var p, f;\n    const r = (((f = (p = t.flow.digits) == null ? void 0 : p[s]) == null ? void 0 : f.max) ?? 9) + 1, o = Array.from({ length: r }).map((K, v) => {\n      const b = c(\"span\", { className: \"digit__num\" }, [\n        document.createTextNode(String(v))\n      ]);\n      return v !== i && b.setAttribute(\"inert\", \"\"), b.style.setProperty(\"--n\", String(v)), b;\n    }), l = c(\"span\", {\n      part: `digit ${e}-digit`,\n      className: \"digit\"\n    }, o);\n    l.style.setProperty(\"--current\", String(i)), l.style.setProperty(\"--length\", String(r)), super(t, i, l, a), this.pos = s, this._onAnimationsFinish = () => {\n      this.el.classList.remove(\"is-spinning\");\n    }, this._numbers = o, this.length = r;\n  }\n  willUpdate(t) {\n    const e = this.el.getBoundingClientRect();\n    this._prevValue = this.value;\n    const i = e[this.section.justify] - t[this.section.justify], s = e.width / 2;\n    this._prevCenter = this.section.justify === \"left\" ? i + s : i - s;\n  }\n  update(t) {\n    this.el.style.setProperty(\"--current\", String(t)), this._numbers.forEach((e, i) => i === t ? e.removeAttribute(\"inert\") : e.setAttribute(\"inert\", \"\")), this.value = t;\n  }\n  didUpdate(t) {\n    const e = this.el.getBoundingClientRect(), i = e[this.section.justify] - t[this.section.justify], s = e.width / 2, a = this.section.justify === \"left\" ? i + s : i - s, r = this._prevCenter - a;\n    r && this.el.animate({\n      transform: [`translateX(${r}px)`, \"none\"]\n    }, {\n      ...this.flow.transformTiming,\n      composite: \"accumulate\"\n    });\n    const o = this.getDelta();\n    o && (this.el.classList.add(\"is-spinning\"), this.el.animate({\n      [k]: [-o, 0]\n    }, {\n      ...this.flow.spinTiming ?? this.flow.transformTiming,\n      composite: \"accumulate\"\n    }), this.flow.addEventListener(\"animationsfinish\", this._onAnimationsFinish, { once: !0 }));\n  }\n  getDelta() {\n    var i;\n    if (this.flow.plugins)\n      for (const s of this.flow.plugins) {\n        const a = (i = s.getDelta) == null ? void 0 : i.call(s, this.value, this._prevValue, this);\n        if (a != null)\n          return a;\n      }\n    const t = this.value - this._prevValue, e = this.flow.computedTrend || Math.sign(t);\n    return e < 0 && this.value > this._prevValue ? this.value - this.length - this._prevValue : e > 0 && this.value < this._prevValue ? this.length - this._prevValue + this.value : t;\n  }\n}\nclass q extends N {\n  constructor(t, e, i, s) {\n    const a = c(\"span\", {\n      className: \"symbol__value\",\n      textContent: i\n    });\n    super(t, i, c(\"span\", {\n      part: `symbol ${e}`,\n      className: \"symbol\"\n    }, [a]), s), this.type = e, this._children = /* @__PURE__ */ new Map(), this._onChildRemove = (r) => () => {\n      this._children.delete(r);\n    }, this._children.set(i, new E(this.flow, a, {\n      onRemove: this._onChildRemove(i)\n    }));\n  }\n  willUpdate(t) {\n    if (this.type === \"decimal\")\n      return;\n    const e = this.el.getBoundingClientRect();\n    this._prevOffset = e[this.section.justify] - t[this.section.justify];\n  }\n  update(t) {\n    if (this.value !== t) {\n      const e = this._children.get(this.value);\n      if (e.present = !1, this._children.has(t)) {\n        const i = this._children.get(t);\n        i.present = !0;\n      } else {\n        const i = c(\"span\", {\n          className: \"symbol__value\",\n          textContent: t\n        });\n        this.el.appendChild(i), this._children.set(t, new E(this.flow, i, {\n          animateIn: !0,\n          onRemove: this._onChildRemove(t)\n        }));\n      }\n    }\n    this.value = t;\n  }\n  didUpdate(t) {\n    if (this.type === \"decimal\")\n      return;\n    const i = this.el.getBoundingClientRect()[this.section.justify] - t[this.section.justify], s = this._prevOffset - i;\n    s && this.el.animate({\n      transform: [`translateX(${s}px)`, \"none\"]\n    }, { ...this.flow.transformTiming, composite: \"accumulate\" });\n  }\n}\nconst J = (n, t) => n == null ? t : t == null ? n : Math.max(n, t), S = /* @__PURE__ */ new WeakMap(), it = {\n  onUpdate(n, t, e) {\n    if (S.set(e, void 0), !e.computedTrend)\n      return;\n    const i = t.integer.concat(t.fraction).filter((o) => o.type === \"integer\" || o.type === \"fraction\"), s = n.integer.concat(n.fraction).filter((o) => o.type === \"integer\" || o.type === \"fraction\"), a = i.find((o) => !s.find((l) => l.pos === o.pos && l.value === o.value)), r = s.find((o) => !i.find((l) => o.pos === l.pos && o.value === l.value));\n    S.set(e, J(a == null ? void 0 : a.pos, r == null ? void 0 : r.pos));\n  },\n  getDelta(n, t, e) {\n    const i = n - t, s = S.get(e.flow);\n    if (!i && s != null && s >= e.pos)\n      return e.length * e.flow.computedTrend;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/number-flow/dist/continuous-ybARbRnI.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/number-flow/dist/index.mjs":
/*!*************************************************!*\
  !*** ./node_modules/number-flow/dist/index.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digit: () => (/* reexport safe */ _continuous_ybARbRnI_mjs__WEBPACK_IMPORTED_MODULE_0__.D),\n/* harmony export */   NumberFlowLite: () => (/* reexport safe */ _continuous_ybARbRnI_mjs__WEBPACK_IMPORTED_MODULE_0__.N),\n/* harmony export */   canAnimate: () => (/* reexport safe */ _continuous_ybARbRnI_mjs__WEBPACK_IMPORTED_MODULE_0__.a),\n/* harmony export */   continuous: () => (/* reexport safe */ _continuous_ybARbRnI_mjs__WEBPACK_IMPORTED_MODULE_0__.c),\n/* harmony export */   define: () => (/* reexport safe */ _continuous_ybARbRnI_mjs__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   formatToData: () => (/* binding */ d),\n/* harmony export */   prefersReducedMotion: () => (/* reexport safe */ _continuous_ybARbRnI_mjs__WEBPACK_IMPORTED_MODULE_0__.p),\n/* harmony export */   renderInnerHTML: () => (/* reexport safe */ _continuous_ybARbRnI_mjs__WEBPACK_IMPORTED_MODULE_0__.r)\n/* harmony export */ });\n/* harmony import */ var _continuous_ybARbRnI_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous-ybARbRnI.mjs */ \"(ssr)/./node_modules/number-flow/dist/continuous-ybARbRnI.mjs\");\n\nfunction d(n, h, u, l) {\n  const r = h.formatToParts(n);\n  u && r.unshift({ type: \"prefix\", value: u }), l && r.push({ type: \"suffix\", value: l });\n  const f = [], a = [], p = [], c = [], o = {}, s = (t) => `${t}:${o[t] = (o[t] ?? -1) + 1}`;\n  let y = \"\", g = !1, v = !1;\n  for (const t of r) {\n    y += t.value;\n    const e = t.type === \"minusSign\" || t.type === \"plusSign\" ? \"sign\" : t.type;\n    e === \"integer\" ? (g = !0, a.push(...t.value.split(\"\").map((i) => ({ type: e, value: parseInt(i) })))) : e === \"group\" ? a.push({ type: e, value: t.value }) : e === \"decimal\" ? (v = !0, p.push({ type: e, value: t.value, key: s(e) })) : e === \"fraction\" ? p.push(...t.value.split(\"\").map((i) => ({\n      type: e,\n      value: parseInt(i),\n      key: s(e),\n      pos: -1 - o[e]\n    }))) : (g || v ? c : f).push({\n      type: e,\n      value: t.value,\n      key: s(e)\n    });\n  }\n  const m = [];\n  for (let t = a.length - 1; t >= 0; t--) {\n    const e = a[t];\n    m.unshift(e.type === \"integer\" ? {\n      ...e,\n      key: s(e.type),\n      pos: o[e.type]\n    } : {\n      ...e,\n      key: s(e.type)\n    });\n  }\n  return {\n    pre: f,\n    integer: m,\n    fraction: p,\n    post: c,\n    valueAsString: y,\n    value: typeof n == \"string\" ? parseFloat(n) : n\n  };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbnVtYmVyLWZsb3cvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQW1HO0FBQ25HO0FBQ0E7QUFDQSxtQkFBbUIsMEJBQTBCLGlCQUFpQiwwQkFBMEI7QUFDeEYsOENBQThDLGdCQUFnQixFQUFFLEdBQUcsd0JBQXdCO0FBQzNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLDZCQUE2QixnQ0FBZ0MseUJBQXlCLHdDQUF3QyxvQ0FBb0M7QUFDM087QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSw2QkFBNkIsUUFBUTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFVRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxiYWxsYlxcRG93bmxvYWRzXFxoZWxsb1xcS29tYmF0VUktMVxcbm9kZV9tb2R1bGVzXFxudW1iZXItZmxvd1xcZGlzdFxcaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEQgYXMgSSwgTiBhcyBTLCBhIGFzIFQsIGMgYXMgeCwgZCBhcyBBLCBwIGFzIEYsIHIgYXMgTCB9IGZyb20gXCIuL2NvbnRpbnVvdXMteWJBUmJSbkkubWpzXCI7XG5mdW5jdGlvbiBkKG4sIGgsIHUsIGwpIHtcbiAgY29uc3QgciA9IGguZm9ybWF0VG9QYXJ0cyhuKTtcbiAgdSAmJiByLnVuc2hpZnQoeyB0eXBlOiBcInByZWZpeFwiLCB2YWx1ZTogdSB9KSwgbCAmJiByLnB1c2goeyB0eXBlOiBcInN1ZmZpeFwiLCB2YWx1ZTogbCB9KTtcbiAgY29uc3QgZiA9IFtdLCBhID0gW10sIHAgPSBbXSwgYyA9IFtdLCBvID0ge30sIHMgPSAodCkgPT4gYCR7dH06JHtvW3RdID0gKG9bdF0gPz8gLTEpICsgMX1gO1xuICBsZXQgeSA9IFwiXCIsIGcgPSAhMSwgdiA9ICExO1xuICBmb3IgKGNvbnN0IHQgb2Ygcikge1xuICAgIHkgKz0gdC52YWx1ZTtcbiAgICBjb25zdCBlID0gdC50eXBlID09PSBcIm1pbnVzU2lnblwiIHx8IHQudHlwZSA9PT0gXCJwbHVzU2lnblwiID8gXCJzaWduXCIgOiB0LnR5cGU7XG4gICAgZSA9PT0gXCJpbnRlZ2VyXCIgPyAoZyA9ICEwLCBhLnB1c2goLi4udC52YWx1ZS5zcGxpdChcIlwiKS5tYXAoKGkpID0+ICh7IHR5cGU6IGUsIHZhbHVlOiBwYXJzZUludChpKSB9KSkpKSA6IGUgPT09IFwiZ3JvdXBcIiA/IGEucHVzaCh7IHR5cGU6IGUsIHZhbHVlOiB0LnZhbHVlIH0pIDogZSA9PT0gXCJkZWNpbWFsXCIgPyAodiA9ICEwLCBwLnB1c2goeyB0eXBlOiBlLCB2YWx1ZTogdC52YWx1ZSwga2V5OiBzKGUpIH0pKSA6IGUgPT09IFwiZnJhY3Rpb25cIiA/IHAucHVzaCguLi50LnZhbHVlLnNwbGl0KFwiXCIpLm1hcCgoaSkgPT4gKHtcbiAgICAgIHR5cGU6IGUsXG4gICAgICB2YWx1ZTogcGFyc2VJbnQoaSksXG4gICAgICBrZXk6IHMoZSksXG4gICAgICBwb3M6IC0xIC0gb1tlXVxuICAgIH0pKSkgOiAoZyB8fCB2ID8gYyA6IGYpLnB1c2goe1xuICAgICAgdHlwZTogZSxcbiAgICAgIHZhbHVlOiB0LnZhbHVlLFxuICAgICAga2V5OiBzKGUpXG4gICAgfSk7XG4gIH1cbiAgY29uc3QgbSA9IFtdO1xuICBmb3IgKGxldCB0ID0gYS5sZW5ndGggLSAxOyB0ID49IDA7IHQtLSkge1xuICAgIGNvbnN0IGUgPSBhW3RdO1xuICAgIG0udW5zaGlmdChlLnR5cGUgPT09IFwiaW50ZWdlclwiID8ge1xuICAgICAgLi4uZSxcbiAgICAgIGtleTogcyhlLnR5cGUpLFxuICAgICAgcG9zOiBvW2UudHlwZV1cbiAgICB9IDoge1xuICAgICAgLi4uZSxcbiAgICAgIGtleTogcyhlLnR5cGUpXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBwcmU6IGYsXG4gICAgaW50ZWdlcjogbSxcbiAgICBmcmFjdGlvbjogcCxcbiAgICBwb3N0OiBjLFxuICAgIHZhbHVlQXNTdHJpbmc6IHksXG4gICAgdmFsdWU6IHR5cGVvZiBuID09IFwic3RyaW5nXCIgPyBwYXJzZUZsb2F0KG4pIDogblxuICB9O1xufVxuZXhwb3J0IHtcbiAgSSBhcyBEaWdpdCxcbiAgUyBhcyBOdW1iZXJGbG93TGl0ZSxcbiAgVCBhcyBjYW5BbmltYXRlLFxuICB4IGFzIGNvbnRpbnVvdXMsXG4gIEEgYXMgZGVmaW5lLFxuICBkIGFzIGZvcm1hdFRvRGF0YSxcbiAgRiBhcyBwcmVmZXJzUmVkdWNlZE1vdGlvbixcbiAgTCBhcyByZW5kZXJJbm5lckhUTUxcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/number-flow/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/number-flow/dist/plugins.mjs":
/*!***************************************************!*\
  !*** ./node_modules/number-flow/dist/plugins.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   continuous: () => (/* reexport safe */ _continuous_ybARbRnI_mjs__WEBPACK_IMPORTED_MODULE_0__.c)\n/* harmony export */ });\n/* harmony import */ var _continuous_ybARbRnI_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./continuous-ybARbRnI.mjs */ \"(ssr)/./node_modules/number-flow/dist/continuous-ybARbRnI.mjs\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbnVtYmVyLWZsb3cvZGlzdC9wbHVnaW5zLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUdqRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxiYWxsYlxcRG93bmxvYWRzXFxoZWxsb1xcS29tYmF0VUktMVxcbm9kZV9tb2R1bGVzXFxudW1iZXItZmxvd1xcZGlzdFxccGx1Z2lucy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYyBhcyBuIH0gZnJvbSBcIi4vY29udGludW91cy15YkFSYlJuSS5tanNcIjtcbmV4cG9ydCB7XG4gIG4gYXMgY29udGludW91c1xufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/number-flow/dist/plugins.mjs\n");

/***/ })

};
;